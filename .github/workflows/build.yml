name: Build main Branch
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Code Checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          cache: 'npm'

      - name: load npm cache
        uses: c-hive/gha-npm-cache@v1

      - name: Get Github action IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Setting environment variables..
        run: |
          echo "AWS_DEFAULT_REGION=ap-south-1" >> $GITHUB_ENV
          echo "AWS_SG_NAME=PrasadDesktop" >> $GITHUB_ENV

      - name: Add Github Actions IP to Security group
        run: |
          echo $AWS_SG_NAME
          echo $steps.ip.outputs.ipv4
          aws ec2 authorize-security-group-ingress --group-id sg-0b72b16eedd25bedb --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}

      - name: Install dependencies
        run: npm ci

      - name: Build App
        run: |
          ls -alrth build/
          npm run build --if-present
          ls -alrth build/
          echo "$KEY_CONTENT" | base64 --decode > $GITHUB_WORKSPACE/.key
          chmod 600 $GITHUB_WORKSPACE/.key
          rsync -PvOr -e "ssh -o StrictHostKeyChecking=no -i $GITHUB_WORKSPACE/.key" --info=progress2 build/ ubuntu@3.109.137.163:/opt/kulfy3.1/
        env:
          CI: FALSE
          KEY_CONTENT: ${{ secrets.WEB_KEY_TOKEN }}
          PUBLIC_URL: /

      - name: Remove Github Actions IP from security group
        run: |
          aws ec2 revoke-security-group-ingress --group-id sg-0b72b16eedd25bedb --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}
        if: always()
